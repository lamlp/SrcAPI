// <auto-generated />
using System;
using ComputerShopAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComputerShopAPI.Migrations
{
    [DbContext(typeof(ComputerShopAPIContext))]
    partial class ComputerShopAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ComputerShopAPI.Models.Admins", b =>
                {
                    b.Property<string>("Account")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.HasKey("Account");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ComputerShopAPI.Models.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired();

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ComputerShopAPI.Models.Customers", b =>
                {
                    b.Property<int>("CusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .IsRequired();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<DateTime>("BirthDay");

                    b.Property<string>("CusName")
                        .IsRequired();

                    b.Property<bool>("CusType");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool>("Gender");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("PersonalId")
                        .IsRequired();

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.HasKey("CusId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ComputerShopAPI.Models.MyOrders", b =>
                {
                    b.Property<int>("MyOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CusId");

                    b.Property<int>("OrderId");

                    b.HasKey("MyOrderId");

                    b.HasIndex("CusId");

                    b.HasIndex("OrderId");

                    b.ToTable("MyOrders");
                });

            modelBuilder.Entity("ComputerShopAPI.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int>("OrderId");

                    b.Property<int>("Price");

                    b.Property<int>("ProductId");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ComputerShopAPI.Models.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CusAddress");

                    b.Property<string>("CusName")
                        .IsRequired();

                    b.Property<string>("CusPhoneNumber");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<string>("Note");

                    b.Property<bool>("Status");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ComputerShopAPI.Models.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descriptions");

                    b.Property<string>("Image")
                        .IsRequired();

                    b.Property<int>("Price");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<int>("SubCategoryId");

                    b.HasKey("ProductId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ComputerShopAPI.Models.Recommendations", b =>
                {
                    b.Property<int>("RecommendationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId");

                    b.HasKey("RecommendationId");

                    b.HasIndex("ProductId");

                    b.ToTable("Recommendations");
                });

            modelBuilder.Entity("ComputerShopAPI.Models.SubCategories", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("SubCategoryName")
                        .IsRequired();

                    b.HasKey("SubCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("ComputerShopAPI.Models.TimeBaseDisplays", b =>
                {
                    b.Property<int>("TimeBaseDisplayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DayOfWeek");

                    b.Property<TimeSpan?>("FromHour");

                    b.Property<DateTime?>("FromTime");

                    b.Property<TimeSpan?>("ToHour");

                    b.Property<DateTime?>("ToTime");

                    b.HasKey("TimeBaseDisplayId");

                    b.ToTable("TimeBaseDisplays");
                });

            modelBuilder.Entity("ComputerShopAPI.Models.TimeRules", b =>
                {
                    b.Property<int>("TimeRuleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId");

                    b.Property<int>("TimeBaseDisplayId");

                    b.HasKey("TimeRuleId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TimeBaseDisplayId");

                    b.ToTable("TimeRules");
                });

            modelBuilder.Entity("ComputerShopAPI.Models.MyOrders", b =>
                {
                    b.HasOne("ComputerShopAPI.Models.Customers", "Customers")
                        .WithMany("MyOrders")
                        .HasForeignKey("CusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ComputerShopAPI.Models.Orders", "Orders")
                        .WithMany("MyOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ComputerShopAPI.Models.OrderDetails", b =>
                {
                    b.HasOne("ComputerShopAPI.Models.Orders", "Orders")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ComputerShopAPI.Models.Products", "Products")
                        .WithMany("OrdersDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ComputerShopAPI.Models.Products", b =>
                {
                    b.HasOne("ComputerShopAPI.Models.SubCategories")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ComputerShopAPI.Models.Recommendations", b =>
                {
                    b.HasOne("ComputerShopAPI.Models.Products", "Products")
                        .WithMany("Recommendations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ComputerShopAPI.Models.SubCategories", b =>
                {
                    b.HasOne("ComputerShopAPI.Models.Categories", "Categories")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ComputerShopAPI.Models.TimeRules", b =>
                {
                    b.HasOne("ComputerShopAPI.Models.Products", "Products")
                        .WithMany("TimeRules")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ComputerShopAPI.Models.TimeBaseDisplays", "TimeBaseDisplays")
                        .WithMany("TimeRule")
                        .HasForeignKey("TimeBaseDisplayId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
